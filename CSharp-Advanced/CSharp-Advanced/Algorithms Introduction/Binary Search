using System;
using System.Linq;

namespace BinarySearchIterative
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] array = Console.ReadLine().Split().Select(int.Parse).ToArray();
            int target = int.Parse(Console.ReadLine());
            Console.WriteLine(IterativeBinarySearch(array, target));

            Console.WriteLine(RecursiveBinarySearch(array, target));
        
        }
        static int IterativeBinarySearch(int[] array, int target)
        {
            //Initialize the state of the indexes that correspond to the first and last available indexes in the array.
            int left = 0;
            int right = array.Length - 1;

            while (left <= right)
            {
                var middle = (left + right) / 2;

                if (array[middle] == target)
                {
                    return middle;
                }
                if (target < array[middle])
                {
                    right = middle - 1;
                }
                else
                {
                    left = middle + 1;
                }
            }

            return -1;
        }

        static int RecursiveBinarySearch(int[] array, int left, int right,int target)
        {
            if (right >= left)
            {
                int middle = left + (right - left) / 2;

                if (array[middle] == target)
                {
                    return middle;
                }
                if (array[middle] > target)
                {
                    return RecursiveBinarySearch(array, left, middle - 1, target);
                }
                else
                {
                    return RecursiveBinarySearch(array, middle + 1, right, target);
                }
            }

            return -1;
        }
        static int RecursiveBinarySearch(int[] array, int target)
        {
            return RecursiveBinarySearch(array, 0, array.Length - 1, target);
        }
    }
}
